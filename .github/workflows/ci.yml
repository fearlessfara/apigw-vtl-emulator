# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-java:
    name: Test Java VTL Processor
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: emulator

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test with Maven
        run: mvn clean test

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: java-test-results
          path: emulator/target/surefire-reports/
          retention-days: 30

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: vtl-processor-jar
          path: emulator/target/vtl-processor.jar
          retention-days: 30

  validate-frontend:
    name: Validate Frontend
    runs-on: ubuntu-latest
    needs: test-java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Validate HTML
        run: |
          # Check if HTML is valid
          if command -v tidy &> /dev/null; then
            tidy -q -e index.html || echo "HTML validation completed"
          else
            echo "tidy not available, skipping HTML validation"
          fi

      - name: Check JavaScript syntax
        run: |
          # Basic JavaScript syntax check
          for file in js/*.js; do
            if [ -f "$file" ]; then
              node -c "$file" || exit 1
            fi
          done

      - name: Validate file structure
        run: |
          # Check that required files exist
          test -f index.html || exit 1
          test -f style.css || exit 1
          test -d js || exit 1
          test -d emulator || exit 1
          test -f emulator/target/vtl-processor.jar || exit 1
          echo "✅ All required files present"

  build-status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [test-java, validate-frontend]
    if: always()

    steps:
      - name: Check build status
        run: |
          if [ "${{ needs.test-java.result }}" == "success" ] && [ "${{ needs.validate-frontend.result }}" == "success" ]; then
            echo "✅ All checks passed"
            exit 0
          else
            echo "❌ Some checks failed"
            echo "Java tests: ${{ needs.test-java.result }}"
            echo "Frontend validation: ${{ needs.validate-frontend.result }}"
            exit 1
          fi 